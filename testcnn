import os
import torch
import torch.nn as nn
import torch.nn.functional as F
from torchvision import transforms
from PIL import Image
import numpy as np

# CNN 모델 정의
class SimpleCNN(nn.Module):
    def __init__(self, num_classes=10):
        super(SimpleCNN, self).__init__()
        self.conv1 = nn.Conv2d(3, 32, kernel_size=3, stride=1, padding=1)
        self.conv2 = nn.Conv2d(32, 64, kernel_size=3, stride=1, padding=1)
        self.pool = nn.MaxPool2d(kernel_size=2, stride=2, padding=0)
        self.fc1 = nn.Linear(64 * 56 * 56, 512)
        self.fc2 = nn.Linear(512, num_classes)
    
    def forward(self, x):
        x = self.pool(F.relu(self.conv1(x)))
        x = self.pool(F.relu(self.conv2(x)))
        x = x.view(-1, 64 * 56 * 56)
        x = F.relu(self.fc1(x))
        x = self.fc2(x)
        return x

# 이미지 전처리
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))
])

def get_class_names_from_directory(directory_path):
    class_names = [d for d in os.listdir(directory_path) if os.path.isdir(os.path.join(directory_path, d))]
    return class_names

# 클래스 이름 불러오기
dataset_path = 'Z:/VSCODE/AI/new cnn project/data/train'
class_names = get_class_names_from_directory(dataset_path)

# 이미지 불러오기 및 전처리
image_path = "Z:/VSCODE/AI/new cnn project/data/test/unnamed.jpg"
image = Image.open(image_path).convert("RGB")
image = transform(image)
image = image.unsqueeze(0)  # 배치 차원 추가

# 모델 불러오기 및 예측
model_path = "Z:/VSCODE/AI/new cnn project/saved_models/model.pth"
model = SimpleCNN(num_classes=len(class_names))
model.load_state_dict(torch.load(model_path))
model.eval()

with torch.no_grad():
    outputs = model(image)
    _, predicted = torch.max(outputs.data, 1)
    confidence_score = F.softmax(outputs, dim=1)[0][predicted.item()].item()
    
    # 알려지지 않은 클래스를 인식하는 신뢰도 임계값 설정
    confidence_threshold = 2  # 필요에 따라 이 임계값을 조절하세요
    
    if confidence_score >= confidence_threshold:
        class_name = class_names[predicted.item()]
    else:
        class_name = "???"

print(f"클래스: {class_name}, 신뢰도: {confidence_score:.2f}")
